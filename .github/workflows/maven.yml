name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build and Test
        run: mvn clean install -X

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: munwarali/springboot-images-new
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: springboot-images-new
          path: target/springboot-images-new.jar

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: springboot-images-new
          path: target/

      - name: Check run
        run: |
          docker stop springboot-images-new || true
          docker rm springboot-images-new || true
          docker pull munwarali/springboot-images-new:latest
          docker run -d --restart=always --name springboot-images-new -p 0.0.0.0:8080:8080 munwarali/springboot-images-new:latest

  deploy:
    needs: build
    runs-on: [aws-ec2]  

    steps:
      - name: Pull images from Docker Hub
        run: docker pull munwarali/springboot-images-new:latest

      - name: Delete old container
        run: docker rm -f springboot-images-new

      - name: Run Docker container
        run: docker run -d -p 8080:8080 --name springboot-images-new munwarali/springboot-images-new
